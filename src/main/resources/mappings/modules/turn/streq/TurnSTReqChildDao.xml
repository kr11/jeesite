<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.turn.dao.streq.TurnSTReqChildDao">
    
	<sql id="turnSTReqChildColumns">
		a.id AS "id",
		a.requirement_id AS "requirementId",
		a.department_id AS "departmentId",
		a.department_name AS "departmentName",
		a.time_length AS "timeLength",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="turnSTReqChildJoins">
		LEFT JOIN turn_standardized_requirement_main b ON b.id = a.requirement_id
	</sql>
    
	<select id="get" resultType="TurnSTReqChild">
		SELECT 
			<include refid="turnSTReqChildColumns"/>
		FROM turn_standardized_requirement_child a
		<include refid="turnSTReqChildJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TurnSTReqChild">
		SELECT 
			<include refid="turnSTReqChildColumns"/>
		FROM turn_standardized_requirement_child a
		<include refid="turnSTReqChildJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="requirementId != null and requirementId != ''">
				AND a.requirement_id = #{requirementId}
			</if>
			<if test="departmentName != null and departmentName != ''">
				AND a.department_name = #{departmentName}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TurnSTReqChild">
		SELECT 
			<include refid="turnSTReqChildColumns"/>
		FROM turn_standardized_requirement_child a
		<include refid="turnSTReqChildJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO turn_standardized_requirement_child(
			id,
			requirement_id,
			department_id,
			department_name,
			time_length,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{requirementId},
			#{departmentId},
			#{departmentName},
			#{timeLength},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE turn_standardized_requirement_child SET 	
			department_name = #{departmentName},
			time_length = #{timeLength}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE turn_standardized_requirement_child SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE requirement_id = #{requirementId}
			</otherwise>
		</choose>
	</update>
	
</mapper>